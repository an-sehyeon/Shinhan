<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- ServletContext의 파라메터, 전체적인 설정은 /WEB-INF/spring/root-context.xml에서 함 -->
	<!-- 모든 context에서 공유 가능 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring/root-context.xml
			/WEB-INF/spring/root-context-kakao.xml
			/WEB-INF/spring/root-context-naver.xml
			/WEB-INF/spring/root-context-email.xml
			/WEB-INF/spring/root-context-tx.xml
			/WEB-INF/spring/root-context-oracle.xml
		</param-value>
	</context-param>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context-setting.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<init-param>
			<param-name>throwExceptionIfNoHandlerFound</param-name>
			<param-value>true</param-value>
		</init-param>

		<!-- multipart-config 추가 -->
		<multipart-config>
			<location>/tmp</location> <!-- 임시 저장 위치, 필요에 따라 변경 -->
			<max-file-size>104857600</max-file-size> <!-- 100MB -->
			<max-request-size>209715200</max-request-size> <!-- 200MB -->
			<file-size-threshold>0</file-size-threshold>
		</multipart-config>
	</servlet>

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- Spring 제공한 filter 등록하기 : Post일때 한글 깨짐 방지 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- CORS 필터 (로그인 필터보다 먼저 실행되어야 함 -> 로그인 확인 전에 요청을 받아야하기 때문에) -->
	<filter>
	    <filter-name>corsFilter</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	    <init-param>
	        <param-name>targetBeanName</param-name>
	        <param-value>corsFilter</param-value>
	    </init-param>
	    <init-param>
	        <param-name>targetFilterLifecycle</param-name>
	        <param-value>true</param-value>
	    </init-param>
	</filter>

	<filter-mapping>
	    <filter-name>corsFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 로그인 필터 -->
	<filter>
	    <filter-name>loginFilter</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	    <init-param>
	        <param-name>targetBeanName</param-name>
	        <param-value>loginFilter</param-value>
	    </init-param>
	    <init-param>
	        <param-name>targetFilterLifecycle</param-name>
	        <param-value>true</param-value>
	    </init-param>
	</filter>

	<filter-mapping>
		<filter-name>loginFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>
