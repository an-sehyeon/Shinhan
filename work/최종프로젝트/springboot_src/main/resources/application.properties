spring.application.name=chachacreate
spring.config.import=optional:file:git_submodule_chacha/application-common.properties,optional:file:git_submodule_chacha/application-secrets.properties,optional:file:git_submodule_chacha/application-db.properties

# S3Uploader가 참조하는 커스텀 한도
app.upload.max-file-size=15MB
app.upload.max-request-size=60MB


# 업로드 설정
spring.servlet.multipart.max-file-size=15MB
spring.servlet.multipart.max-request-size=60MB
server.tomcat.max-http-form-post-size=60MB

# Spring JPA (MySQL)
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# JPA 보이게 설정
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


##나의 DB# JPA설정
##스키마생성 (create, create-drop, update:변경 부분만 반영, validate, none)
## table을 자동생성 할 것인지 , 수동생성 할 것인지
##큰 규모의 프로젝트는 테이블을 별도로 생성하고 코드를 작성하는 것이 일반적이다.
#spring.jpa.hibernate.ddl-auto=update
## DDL생성시 데이터베이스 고유의 기능을 사용하는가?
#spring.jpa.generate-ddl=false
##실행되는 SQL문을 보여줄 것인가?
#spring.jpa.show-sql=true
##format 된 SQL문을 보여줄지?
#spring.jpa.properties.hibernate.format_sql=true
#
## MariaDB 연결설정
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/mysql
#spring.datasource.username=root
#spring.datasource.password=1234
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# JWT 토큰 유효기간 설정
# access token 유효기간 7일
jwt.access-token-validity=3600000
# refresh token 유효기간 일주일
jwt.refresh-token-validity=604800000